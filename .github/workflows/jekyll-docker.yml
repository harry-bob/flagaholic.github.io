name: Build and deploy GitHub Pages

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Merge html headers
        run: |
          for file in site/*.html; do
            if [ "$(basename "$file")" != "oldindex.html" ]; then
              filename=$(basename "$file" .html)
              case "$filename" in
                "index") title="HK CTF Team";;
                "members") title="Members";;
                "achievements") title="Achievements";;
                "writeups") title="Writeups";;
                "contact") title="Contact";;
                *) title="$filename";;
              esac
              
              # Create temporary files
              tmp_file=$(mktemp)
              tmp_header=$(mktemp)
              
              # Process header template
              sed "s/%TITLE%/$title/g" site/includes/header.html > "$tmp_header"
              
              # Replace content between head and header tags
              awk '
                BEGIN       {p=1}
                /<head>/   {print; system("cat '"$tmp_header"'"); p=0}
                /<\/header>/{p=1; next}
                p          {print}
              ' "$file" > "$tmp_file"
              
              # Update nav active state
              sed -i "s/class=\"active\"//g" "$tmp_file"
              sed -i "s|href=\"./${filename}.html\"|href=\"./${filename}.html\" class=\"active\"|g" "$tmp_file"
              
              # Move processed file back
              mv "$tmp_file" "$file"
              
              # Cleanup
              rm -f "$tmp_header"
            fi
          done

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Build site
        run: |
          bundle install
          bundle exec jekyll build --destination _site
        env:
          JEKYLL_ENV: production
          BUNDLE_PATH: vendor/bundle

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
